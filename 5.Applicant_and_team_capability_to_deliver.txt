### TEAM STATEMENT (section 5) BEGIN ###

The project leadership team consists of Thorsten Altenkirch (Professor of Computer Science), Ulrik Buchholtz (Assistant Professor of Computer Science), and Nicolai Kraus (Royal Society University Research Fellow and Professor of Theoretical Computer Science). In addition, our team comprises one full-time PDRA and nine project partners.

The proposal requires expertise in several different subfields and we, the leadership team, bring exactly this diverse blend of complementary skills to the project. Altenkirch has long standing experience in the syntax and semantics of dependent type theories, Buchholtz is a leading expert in synthetic approaches to mathematics, and Kraus specialises on constructive higher structures. Our project partners are leading experts in their respective subfields and have a track record of successful collaborations with us. In the following, we discuss each of the four R4RI modules in detail.

Module 1 – Contributions to the generation of new ideas, tools, methodologies or knowledge

We and our project collaborators have a long history of successful collaborations which led to many joint publications. The Functional Programming Lab at the University of Nottingham, co-chaired by Altenkirch (PI/lead), is one of the internationally leading groups in the field of type theory. Altenkirch's main research interests are type theory, functional programming, categorical methods and quantum computing. He has published over 80 papers in these areas which are frequently cited (h-index 39). Similarly, Buchholtz and Kraus (co-leads) very frequently publish at leading venues in theoretical computer Science such as the flagship and CORE A*-rated conference LICS (logic in computer science), where, earlier this year, we received distinguished paper awards for two separate papers, providing a recent example of how our team's work is recognised at the highest levels in the wider field. For his contributions to homotopy type theory, Kraus further received the Ackermann Award 2016. 

Module 2 – The development of others and maintenance of effective working relationships 

We have ample experience leading research projects. Altenkirch served as the PI on on four EPSRC projects including *Homotopy Type Theory: Programming and Verification* as well as the US Airforce grant *Certified Programming with Dependent Types*. Kraus holds a University Research Fellowship, the Royal Society's 8-year flagship fellowship for early career researchers, and an ERC Consolidator grant (*Translations between Type Theories*). In total, the leadership team has supervised 7 postdoctoral researchers as well as 13 PhD students to completion.

We have a huge network of international collaborations all over the world, including our carefully selected project partners. Altenkirch holds a visiting position at Eötvös Loránd University. We are individually frequently invited to participate at major research meetings at centres including IAS Princeton, IHP Paris, Hausdorff Institute Bonn, Schloss Dagstuhl, CIRM Luminy, and CAS Oslo.

Module 3 – Contributions to the wider research and innovation community 

We have given numerous invited or keynote talks (in 2025 at BCTCS and at the Logic Colloquium, as well as a few smaller workshops and seminars), invited lecture series (e.g. Days In Logic in Lisbon, 2024), served on program committees at leading conferences in theoretical computer science (in 2025, FSCD and LICS), and acted as opponents at many international PhD defences (in 2025: Stockholm, Budapest, Gothenburg, and Paris). We are particularly actively involved in the TYPES community, where Altenkirch (PI/lead) further served on the management committee for the COST action EUTYPES (CA15123), and is currently involved in the COST action EuroProofNet (CA20111). Altenkirch and Kraus participated in the special year on Univalent Foundations at the IAS Princeton (2012/13) and contributed to the HoTT Book. Altenkirch and Buchholtz frequently reach out to the philosophy community and have given invited talks at several philosophy workshops since 2021. Altenkirch has published in a philosophy journal. Buchholtz is a contributor to the Lean proof assistant (https://lean-lang.org/people). We support the development of Agda by providing regular feedback, and teach Lean to our undergraduates.

Our group is one of the founding members of the Midlands Graduate School in the Foundations of Computing Science (MGS), a spring school for PhD students, early career researchers, and industry participants that has been running annually since 1999. In recent years, MGS always attracts more than one hundred in-person participants. We both organise (most recently, 2018 and 2022) and lecture (every year) at MGS. This allows us to reach interested people who are not yet members of our wider community, and places us in a perfect position to recruit PhD students and the PDRA requested as part of this application.

Module 4 – Contributions to broader research/innovation-users and audiences and towards wider societal benefit

Although we work in a deeply foundational field where direct societal impact may not be expected, we work hard on reaching out to non-experts and interested members of the public. One major medium for this is *Computerphile*, a popular YouTube channel with 2.3M subscribers that aims to explain computer science, programming, and related topics in an accessible way. Altenkirch has contributed 18 videos, one of which have breached 1M views and explain a selection of theoretical computer science and type-theoretic topics.

While the spring school MGS focusses on theory, it consistently attracts 10–20 industry participants per year and sponsorship from Meta, Huawei, Standard Chartered, and others. This is unsurprising given that type-theoretic methods are deployed in security-critical contexts. A well-known example is Google Chrome, where the HACL* cryptographic library was extracted from formally verified F★ code at INRIA Rocquencourt (Zinzindohoué et al., 2017).

Agda plays a prominent role in industry applications: at Input Output (IOHK), it underpins the machine-checked formalisation of the Cardano ledger (Chapman et al., 2019) and the semantics of the Plutus and Marlowe smart contract languages. Type-theoretic verification ensures the correctness of consensus protocols, smart contract interpreters, and compilers, providing strong safety and liveness guarantees for distributed systems.

A further example of outreach is the HoTTeST summer school 2022, where Buchholtz lectured. The event attracted roughly 2,000 participants—many of them non-specialists—who engaged with homotopy type theory and joined the wider community.

### TEAM STATEMENT END ### => 1006/1000 words (might be counter differently by the UKRI system!)



# auxiliary notes

??? AIM attended by industry, interested public ???

Thorsten : long standing experience in Type Theory
Nicolai : higher structures
Ulrik : synthetic mathematics in HoTT

WP1  Syntax and Semantics of 1-DTT.
NK WP2  Syntax and Semantics of ∞-DTT.
txa WP3  Metatheory.
WP4  Prototypical Implementation.
NK WP5  Parametricity.
NK WP6  Universal Higher Inductive Types.
WP7  Applications to Mathematics and Physics.

Altenkirch & Neumann DTT
recent work : Ulrik development STT
representing TT within 2-level TT (Nicolai & Tom)

experiences working together?
joint publications: symmeries of spheres






